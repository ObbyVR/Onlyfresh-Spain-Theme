{{ 'component-card.css' | asset_url | stylesheet_tag }}
{{ 'component-price.css' | asset_url | stylesheet_tag }}

{{ 'component-slider.css' | asset_url | stylesheet_tag }}
{{ 'template-collection.css' | asset_url | stylesheet_tag }}

{% if section.settings.image_shape == 'blob' %}
  {{ 'mask-blobs.css' | asset_url | stylesheet_tag }}
{%- endif -%}

{%- if section.settings.enable_quick_add -%}
  {{ 'quick-add.css' | asset_url | stylesheet_tag }}
  <script src="{{ 'quick-add.js' | asset_url }}" defer="defer"></script>
  <script src="{{ 'product-form.js' | asset_url }}" defer="defer"></script>
{%- endif -%}

{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top_mb }}px;
    padding-bottom: {{ section.settings.padding_bottom_mb }}px;
  }
  .section-{{ section.id }}-padding h2.title {
    font-size: {{ section.settings.size_heading_mb }}px;
    margin-bottom: {{ section.settings.margin_heading_mb }}px;
  }

  @media screen and (min-width: 768px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
    .section-{{ section.id }}-padding h2.title {
      font-size: {{ section.settings.size_heading }}px;
      margin-bottom: {{ section.settings.margin_heading }}px;
    }
  }
  @media screen and (max-width: 767px) {
    .recently-view .product-slider .swiper-button {
      top: 39%;
    }
  }
{%- endstyle -%}

{%- liquid
  assign products_to_display = section.settings.collection.all_products_count

  if section.settings.collection.all_products_count > section.settings.products_to_show
    assign products_to_display = section.settings.products_to_show
  endif

  assign columns_mobile_int = section.settings.columns_mobile | plus: 0
  assign show_mobile_slider = false
  if section.settings.swipe_on_mobile and products_to_display > columns_mobile_int
    assign show_mobile_slider = true
  endif

  assign show_desktop_slider = false
  if section.settings.enable_desktop_slider and products_to_display > section.settings.columns_desktop
    assign show_desktop_slider = true
  endif
-%}

<fresh-recentlyproductsviewed
  class="recently-view"
  section-id="{{ section.id }}"
  products-count="{{ section.settings.products_to_show }}"
>
  {%- if request.page_type == 'search' and search.performed and search.results_count > 0 -%}
    <div class="color-{{ section.settings.color_scheme }} product-slider">
      <div class="collection section-{{ section.id }}-padding{% if section.settings.full_width %} collection--full-width{% endif %}">
        <div class="collection__title title-wrapper title-wrapper--no-top-margin page-width">
          {%- if section.settings.title != blank -%}
            <h2 class="title inline-richtext {{ section.settings.heading_size }}{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}">
              {{ section.settings.title }}
            </h2>
          {%- endif -%}
        </div>
        {%- assign parsed_terms = search.terms | split: ' OR ' -%}
        <slider-component id="product-slider-{{ section.id }}" class="swiper-container swiper product-slider">
          <ul
            id="Slider-{{ section.id }}"
            class="swiper-wrapper product-grids contains-card contains-card--product"
            role="list"
            aria-label="{{ 'general.slider.name' | t }}"
          >
            {%- for parsed_term in parsed_terms -%}
              {%- assign id = parsed_term | split: 'id:' | last | times: 1 -%}

              {%- for product in search.results -%}
                {%- if product.id == id -%}
                  <li
                    id="Slide-{{ section.id }}-{{ forloop.index }}"
                    class="swiper-slide product-item"
                    {% if settings.animations_reveal_on_scroll %}
                      data-cascade
                      style="--animation-order: {{ forloop.index }};"
                    {% endif %}
                  >
                    {% render 'rocket-fresh-card-product',
                      card_product: product,
                      media_aspect_ratio: section.settings.image_ratio,
                      image_shape: section.settings.image_shape,
                      show_secondary_image: section.settings.show_secondary_image,
                      show_vendor: section.settings.show_vendor,
                      show_rating: section.settings.show_rating,
                      show_quick_add: section.settings.enable_quick_add,
                      section_id: section.id,
                      product_slider: true
                    %}
                  </li>
                  {%- break -%}
                {%- endif -%}
              {%- endfor -%}
            {%- endfor -%}
          </ul>
          <!-- If we need pagination -->
          <div class="section-{{section.id}}-swiper-pagination"></div>

          <!-- If we need navigation buttons -->
          <div class="section-{{section.id}}-swiper-button-prev swiper-button button button-prev">
            {% render 'icon-chervon-left' %}
          </div>
          <div class="section-{{section.id}}-swiper-button-next swiper-button button button-next">
            {% render 'icon-chervon-right' %}
          </div>

          <!-- If we need scrollbar -->
          <div class="section-{{section.id}}-swiper-scrollbar"></div>
          {%- if show_mobile_slider or show_desktop_slider -%}
            <div class="slider-buttons no-js-hidden">
              <button
                type="button"
                class="slider-button slider-button--prev"
                name="previous"
                aria-label="{{ 'general.slider.previous_slide' | t }}"
                aria-controls="Slider-{{ section.id }}"
              >
                {% render 'icon-caret' %}
              </button>
              <div class="slider-counter caption">
                <span class="slider-counter--current">1</span>
                <span aria-hidden="true"> / </span>
                <span class="visually-hidden">{{ 'general.slider.of' | t }}</span>
                <span class="slider-counter--total">{{ products_to_display }}</span>
              </div>
              <button
                type="button"
                class="slider-button slider-button--next"
                name="next"
                aria-label="{{ 'general.slider.next_slide' | t }}"
                aria-controls="Slider-{{ section.id }}"
              >
                {% render 'icon-caret' %}
              </button>
            </div>
          {%- endif -%}
        </slider-component>
        {% if section.settings.image_shape == 'arch' %}
          {% render 'mask-arch' %}
        {%- endif -%}
      </div>
    </div>
  {%- endif -%}
</fresh-recentlyproductsviewed>

<script>
    const DrawerSearchUrl = {{ routes.search_url | json }};
    var FreshRecentlyProductsViewed = class extends HTMLElement {
        async connectedCallback() {
          if (this.searchQueryString === "") {
            return;
          }
          const response = await fetch(`${DrawerSearchUrl}?type=product&q=${this.searchQueryString}&section_id=${this.sectionId}`);
          const div = document.createElement("div");
          console.log(response);
          div.innerHTML = await response.text();
          const recentlyViewedProductsElement = div.querySelector("fresh-recentlyproductsviewed");
          if (recentlyViewedProductsElement.hasChildNodes()) {
            this.innerHTML = recentlyViewedProductsElement.innerHTML;
          }
          new Swiper('#product-slider-{{ section.id }}', {
            navigation: {
              nextEl: '.section-{{section.id}}-swiper-button-next',
              prevEl: '.section-{{section.id}}-swiper-button-prev',
            },
            slidesPerView: 2,
            spaceBetween: 7,
            breakpoints: {
              768: {
                slidesPerView: {{ section.settings.columns_desktop | minus: 1 }},
                spaceBetween: 16,
              },
              1024: {
                slidesPerView: {{ section.settings.columns_desktop }},
                spaceBetween: 16,
              }
            }
          });
        }
        get searchQueryString() {
          const items = JSON.parse(localStorage.getItem("theme:sys-recentlyproductsviewed") || "[]");
          return items
            .map((item) => "id:" + item)
            .slice(0, this.productsCount)
            .join(" OR ");
        }
        get sectionId() {
          return this.getAttribute("section-id");
        }
        get productsCount() {
          return this.getAttribute("products-count") || 4;
        }
    };
    window.customElements.define("fresh-recentlyproductsviewed", FreshRecentlyProductsViewed);
</script>

{% schema %}
{
  "name": "Recently view",
  "tag": "section",
  "class": "section",
  "disabled_on": {
    "groups": ["header", "footer"]
  },
  "settings": [
    {
      "type": "inline_richtext",
      "id": "title",
      "label": "t:sections.featured-collection.settings.title.label"
    },
    {
      "type": "range",
      "id": "size_heading",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "px",
      "label": "Font size heading",
      "default": 28
    },
    {
      "type": "range",
      "id": "size_heading_mb",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "px",
      "label": "Font size heading mobile",
      "default": 22
    },
    {
      "type": "range",
      "id": "margin_heading",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "px",
      "label": "Heading margin bottom",
      "default": 44
    },
    {
      "type": "range",
      "id": "margin_heading_mb",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "px",
      "label": "Heading margin bottom mobile",
      "default": 14
    },
    {
      "type": "range",
      "id": "products_to_show",
      "min": 2,
      "max": 25,
      "step": 1,
      "default": 4,
      "label": "t:sections.featured-collection.settings.products_to_show.label"
    },
    {
      "type": "range",
      "id": "columns_desktop",
      "min": 1,
      "max": 5,
      "step": 1,
      "default": 4,
      "label": "t:sections.featured-collection.settings.columns_desktop.label"
    },
    {
      "type": "checkbox",
      "id": "show_secondary_image",
      "default": false,
      "label": "t:sections.featured-collection.settings.show_secondary_image.label"
    },
    {
      "type": "checkbox",
      "id": "show_vendor",
      "default": false,
      "label": "t:sections.featured-collection.settings.show_vendor.label"
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_top_mb",
      "label": "Padding Top on Mobile",
      "min": 0,
      "max": 100,
      "step": 1,
      "default": 40,
      "unit": "px"
    },
    {
      "type": "range",
      "id": "padding_bottom_mb",
      "label": "Padding Bottom on Mobile",
      "min": 0,
      "max": 100,
      "step": 1,
      "default": 40,
      "unit": "px"
    }
  ],
  "presets": [
    {
      "name": "Recently view"
    }
  ]
}
{% endschema %}
