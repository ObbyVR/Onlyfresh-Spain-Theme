{% liquid
  assign heading = section.settings.heading
  assign heading_color = section.settings.heading_color

  assign image = section.settings.image
  assign image_mobile = section.settings.image_mobile

  assign policy = section.settings.policy
  assign policy_content = section.settings.policy_content

  assign padding_top = section.settings.padding_top
  assign padding_bottom = section.settings.padding_bottom
  assign padding_top_mobile = section.settings.padding_top_mobile
  assign padding_bottom_mobile = section.settings.padding_bottom_mobile
%}

{% style %}
    {% if heading_color != blank %}
        #fresh-login-{{ section.id }} .fresh-login__heading h2 {
            color: {{ heading_color }}
        }
    {% endif %}
    #fresh-login-{{ section.id }} {
        padding-top: {{ padding_top_mobile }}px;
        padding-bottom: {{ padding_bottom_mobile }}px;
    }
    .error-fill {
        outline-color: red !important;
        color: red !important;
    }
    form#customer_login {
      margin-bottom: 10px;
    }
    .forget_password {
      font-weight: 300;
      font-size: 0.7rem;
      cursor:pointer;
    }
    button#submitButton {
      width: 100%;
      border-radius: 20px;
      margin-top: 20px;
      margin-bottom:10px;
  }
    @media (min-width: 1024px) {
        #fresh-login-{{ section.id }} {
            padding-top: {{ padding_top }}px;
            padding-bottom: {{ padding_bottom }}px;
        }
    }
    .bitlogin-root,
    .bitlogin-root + div {
      display: none !important;
    }
{% endstyle %}
<div id="fresh-login-{{ section.id }}" class="fresh-login">
  <div class="fresh-login__inner">
    <div class="fresh-login__main">
      {% if heading != blank %}
      {%- endif -%}
      <div class="fresh-login__body">
        <custom-form class="fresh-login__form">
          <div id="login-box">
            <div class="fresh-login__heading">
              <h2>{{ heading }}</h2>
            </div>
            {%- form 'customer_login', novalidate: 'novalidate' -%}
              {%- if form.errors -%}
                <div class="form-error">
                  {{ form.errors | default_errors }}
                </div>
              {%- endif -%}
              <div class="field">
                <label class="field__label" for="CustomerEmail">
                  {{ 'customer.login_page.email' | t }}
                </label>
                <input
                  type="email"
                  data-name="email"
                  name="customer[email]"
                  id="CustomerEmail"
                  autocomplete="email"
                  autocorrect="off"
                  autocapitalize="off"
                  {% if form.email %}
                    value="{{ form.email }}"
                  {% endif %}
                  {% if form.errors contains 'form' %}
                    aria-invalid="true"
                  {% endif %}
                  class="field__input"
                  placeholder="{{ 'customer.login_page.email' | t }}"
                >
              </div>

              {%- if form.password_needed -%}
                <div class="field">
                  <label class="field__label" for="CustomerPassword">
                    {{ 'customer.login_page.password' | t }}
                  </label>
                  <toggle-password>
                    <input
                      type="password"
                      data-name="password"
                      name="customer[password]"
                      id="CustomerPassword"
                      autocomplete="current-password"
                      {% if form.password %}
                        value="{{ form.password }}"
                      {% endif %}
                      {% if form.errors contains 'form' %}
                        aria-invalid="true"
                      {% endif %}
                      placeholder="{{ 'customer.login_page.password' | t }}"
                      class="field__input"
                    >
                    <span class="eye ">
                      {% render 'icon-eye' %}
                    </span>
                  </toggle-password>
                </div>
              {%- endif -%}

              <div class="login__button">
                <button class="login-button" data-name="submit" onclick="checkErrorForm()">
                  {{ 'customer.login_page.sign_in' | t }}
                </button>
              </div>
            {%- endform -%}
            <span id="forget-password-link" class="forget_password">
              {{- 'customer.login_page.forgot_password' | t -}}
            </span>
            <div class="social-login">
              <span class="social-login__title">{{ 'customer.login_page.social_login.title' | t }}</span>

              <button id="fake-login-gmail">
                {% render 'icon-google-login' %}
                {{ 'customer.login_page.social_login.gmail' | t }}
              </button>
              <button id="fake-login-facebook">
                {% render 'icon-facebook-login' %}
                {{ 'customer.login_page.social_login.facebook' | t }}
              </button>
            </div>

            <div class="register-login-redirect">
              <span class="register-login-redirect__title">{{ 'customer.login_page.register_redirect' | t }}</span>
              <a class="register-login-redirect__link" href="{{ routes.account_register_url }}">
                {{ 'customer.login_page.create_account' | t }}
              </a>
            </div>
          </div>
          <div
            id="recover-password-box"
            class="customer login section-{{ section.id }}-padding hidden"
          >
            <div class="fresh-login__heading">
              <h2 id="recover" tabindex="-1">
                {{ 'customer.recover_password.title' | t }}
              </h2>
            </div>
            <div>
              <p>
                {{ 'customer.recover_password.subtext' | t }}
              </p>

              {%- form 'recover_customer_password' -%}
                {% assign recover_success = form.posted_successfully? %}
                <div class="field">
                  <label for="RecoverEmail">
                    {{ 'customer.login_page.email' | t }}
                  </label>
                  <input
                    type="email"
                    value=""
                    name="email"
                    id="RecoverEmail"
                    autocorrect="off"
                    autocapitalize="off"
                    autocomplete="email"
                    {% if form.errors %}
                      aria-invalid="true"
                      aria-describedby="RecoverEmail-email-error"
                      autofocus
                    {% endif %}
                    placeholder="{{ 'customer.login_page.email' | t }}"
                  >
                </div>
                {%- if form.errors -%}
                  <small id="RecoverEmail-email-error" class="form__message">
                    <span class="svg-wrapper">
                      {{- 'icon-error.svg' | inline_asset_content -}}
                    </span>
                    {{ form.errors.messages.form }}
                  </small>
                {%- endif -%}
                <div class="login__button">
                  <button id="submitButton" class="login-button" type="submit">
                    {{ 'customer.login_page.submit' | t }}
                  </button>
                </div>
                <span id="back-to-login" class="forget_password">{{ 'customer.login_page.atras' | t }}</span>
                {%- if recover_success -%}
                  <p id="confirmationMessage" style="color: green;">
                    {{ 'customer.login_page.recibe_la_mail' | t }}
                  </p>
                {%- endif -%}
              {%- endform -%}
            </div>
          </div>
        </custom-form>

        {% if image != blank or image_mobile != blank %}
          <div class="fresh-login__media">
            {% if image != blank %}
              <div class="content-desktop">
                {{
                  image
                  | image_url: width: image.width, height: image.height
                  | image_tag: width: image.width, height: image.height, loading: 'lazy', alt: image.alt
                }}
              </div>
            {% endif %}
            {% if image_mobile != blank %}
              <div class="content-mobile">
                {{
                  image_mobile
                  | image_url: width: image_mobile.width, height: image_mobile.height
                  | image_tag:
                    width: image_mobile.width,
                    height: image_mobile.height,
                    loading: 'lazy',
                    alt: image_mobile.alt
                }}
              </div>
            {% endif %}
          </div>
        {% endif %}

        {%- if shop.checkout.guest_login -%}
          <div class="account-wrapper">
            <h2>{{ 'customer.login_page.guest_title' | t }}</h2>

            {%- form 'guest_login' -%}
              <button data-name="submit">
                {{ 'customer.login_page.guest_continue' | t }}
              </button>
            {%- endform -%}
          </div>
        {%- endif -%}
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const forgetPasswordLink = document.getElementById('forget-password-link');
    const backToLoginButton = document.getElementById('back-to-login');
    const loginBox = document.getElementById('login-box');
    const recoverPasswordBox = document.getElementById('recover-password-box');

    forgetPasswordLink.addEventListener('click', function () {
      loginBox.classList.add('hidden');
      recoverPasswordBox.classList.remove('hidden');
    });

    backToLoginButton.addEventListener('click', function () {
      recoverPasswordBox.classList.add('hidden');
      loginBox.classList.remove('hidden');
    });
  });
</script>
<script>
  function checkErrorForm() {
    let valEmail = document.getElementById('CustomerEmail'),
      emailPattern = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*$/;
    if (!emailPattern.test(valEmail.value)) {
      valEmail.classList.add('error-fill');
    } else {
      valEmail.classList.remove('error-fill');
    }
  }
</script>
<script src="{{ 'account.js' | asset_url }}" defer></script>
<script>
  document.addEventListener('DOMContentLoaded', function () {
    const buttonfakeGGLogin = document.querySelector('#fake-login-gmail');
    const buttonfakeFBLogin = document.querySelector('#fake-login-facebook');

    buttonfakeGGLogin.onclick = function () {
      setTimeout(function () {
        const buttonGGLogin = document.querySelector('#google-login');
        buttonGGLogin.click();
      }, 1000);
    };

    buttonfakeFBLogin.onclick = function () {
      setTimeout(function () {
        const buttonFBLogin = document.querySelector('#facebook-login');
        buttonFBLogin.click();
      }, 1000);
    };
  });
</script>
{% schema %}
{
  "name": "Fresh - Login",
  "tag": "section",
  "class": "section-fresh-login",
  "settings": [
    {
      "type": "header",
      "content": "Header"
    },
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "Heading"
    },
    {
      "type": "color",
      "id": "heading_color",
      "label": "Color"
    },
    {
      "type": "header",
      "content": "Media"
    },
    {
      "type": "image_picker",
      "id": "image",
      "label": "Image"
    },
    {
      "type": "image_picker",
      "id": "image_mobile",
      "label": "Image mobile"
    },
    {
      "type": "header",
      "content": "Form"
    },
    {
      "type": "checkbox",
      "id": "policy",
      "label": "Enable Policy",
      "default": true
    },
    {
      "type": "richtext",
      "id": "policy_content",
      "label": "Policy"
    },
    {
      "type": "header",
      "content": "padding"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "px",
      "label": "Padding Top",
      "default": 40
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "px",
      "label": "Padding Bottom",
      "default": 40
    },
    {
      "type": "range",
      "id": "padding_top_mobile",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "px",
      "label": "Padding Top mobile",
      "default": 20
    },
    {
      "type": "range",
      "id": "padding_bottom_mobile",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "px",
      "label": "Padding Bottom mobile",
      "default": 20
    }
  ]
}
{% endschema %}
